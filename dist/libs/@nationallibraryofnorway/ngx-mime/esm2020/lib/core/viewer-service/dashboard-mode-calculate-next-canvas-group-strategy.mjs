import { Direction } from '../models/direction';
import { ViewingDirection } from '../models/viewing-direction';
export class DashboardModeCalculateNextCanvasGroupStrategy {
    calculateNextCanvasGroup(criteria) {
        const speed = criteria.speed;
        const direction = criteria.direction;
        const currentCanvasGroupIndex = criteria.currentCanvasGroupIndex;
        const currentCanvasGroupCenter = criteria.currentCanvasGroupCenter;
        let nextCanvasGroup;
        let canvasGroupDelta = this.calculateNumberOfCanvasGroupsToGo(speed);
        if (canvasGroupDelta === 0) {
            nextCanvasGroup = currentCanvasGroupCenter;
        }
        else {
            canvasGroupDelta =
                direction === Direction.LEFT ? canvasGroupDelta : canvasGroupDelta * -1;
            nextCanvasGroup =
                criteria.viewingDirection === ViewingDirection.LTR
                    ? currentCanvasGroupIndex + canvasGroupDelta
                    : currentCanvasGroupIndex - canvasGroupDelta;
        }
        return nextCanvasGroup;
    }
    calculateNumberOfCanvasGroupsToGo(speed) {
        let canvasGroupsToGo = 10;
        if (speed !== undefined) {
            if (speed < 500) {
                canvasGroupsToGo = 0;
            }
            else if (speed >= 500 && speed < 1500) {
                canvasGroupsToGo = 1;
            }
            else if (speed >= 1500 && speed < 2500) {
                canvasGroupsToGo = 3;
            }
            else if (speed >= 2500 && speed < 3500) {
                canvasGroupsToGo = 5;
            }
        }
        return canvasGroupsToGo;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLW1vZGUtY2FsY3VsYXRlLW5leHQtY2FudmFzLWdyb3VwLXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3gtbWltZS9zcmMvbGliL2NvcmUvdmlld2VyLXNlcnZpY2UvZGFzaGJvYXJkLW1vZGUtY2FsY3VsYXRlLW5leHQtY2FudmFzLWdyb3VwLXN0cmF0ZWd5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQU0vRCxNQUFNLE9BQU8sNkNBQTZDO0lBR3hELHdCQUF3QixDQUFDLFFBQWlDO1FBQ3hELE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7UUFDN0IsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQztRQUNyQyxNQUFNLHVCQUF1QixHQUFHLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBQztRQUNqRSxNQUFNLHdCQUF3QixHQUFHLFFBQVEsQ0FBQyx3QkFBd0IsQ0FBQztRQUVuRSxJQUFJLGVBQXVCLENBQUM7UUFDNUIsSUFBSSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsaUNBQWlDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckUsSUFBSSxnQkFBZ0IsS0FBSyxDQUFDLEVBQUU7WUFDMUIsZUFBZSxHQUFHLHdCQUF3QixDQUFDO1NBQzVDO2FBQU07WUFDTCxnQkFBZ0I7Z0JBQ2QsU0FBUyxLQUFLLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUMxRSxlQUFlO2dCQUNiLFFBQVEsQ0FBQyxnQkFBZ0IsS0FBSyxnQkFBZ0IsQ0FBQyxHQUFHO29CQUNoRCxDQUFDLENBQUMsdUJBQXVCLEdBQUcsZ0JBQWdCO29CQUM1QyxDQUFDLENBQUMsdUJBQXVCLEdBQUcsZ0JBQWdCLENBQUM7U0FDbEQ7UUFDRCxPQUFPLGVBQWUsQ0FBQztJQUN6QixDQUFDO0lBRU8saUNBQWlDLENBQUMsS0FBeUI7UUFDakUsSUFBSSxnQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFDMUIsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3ZCLElBQUksS0FBSyxHQUFHLEdBQUcsRUFBRTtnQkFDZixnQkFBZ0IsR0FBRyxDQUFDLENBQUM7YUFDdEI7aUJBQU0sSUFBSSxLQUFLLElBQUksR0FBRyxJQUFJLEtBQUssR0FBRyxJQUFJLEVBQUU7Z0JBQ3ZDLGdCQUFnQixHQUFHLENBQUMsQ0FBQzthQUN0QjtpQkFBTSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxHQUFHLElBQUksRUFBRTtnQkFDeEMsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDO2FBQ3RCO2lCQUFNLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEdBQUcsSUFBSSxFQUFFO2dCQUN4QyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7YUFDdEI7U0FDRjtRQUNELE9BQU8sZ0JBQWdCLENBQUM7SUFDMUIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aW9uIH0gZnJvbSAnLi4vbW9kZWxzL2RpcmVjdGlvbic7XG5pbXBvcnQgeyBWaWV3aW5nRGlyZWN0aW9uIH0gZnJvbSAnLi4vbW9kZWxzL3ZpZXdpbmctZGlyZWN0aW9uJztcbmltcG9ydCB7XG4gIENhbGN1bGF0ZU5leHRDYW52YXNHcm91cFN0cmF0ZWd5LFxuICBOZXh0Q2FudmFzR3JvdXBDcml0ZXJpYSxcbn0gZnJvbSAnLi9jYWxjdWxhdGUtbmV4dC1jYW52YXMtZ3JvdXAtc3RyYXRlZ3knO1xuXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkTW9kZUNhbGN1bGF0ZU5leHRDYW52YXNHcm91cFN0cmF0ZWd5XG4gIGltcGxlbWVudHMgQ2FsY3VsYXRlTmV4dENhbnZhc0dyb3VwU3RyYXRlZ3lcbntcbiAgY2FsY3VsYXRlTmV4dENhbnZhc0dyb3VwKGNyaXRlcmlhOiBOZXh0Q2FudmFzR3JvdXBDcml0ZXJpYSk6IG51bWJlciB7XG4gICAgY29uc3Qgc3BlZWQgPSBjcml0ZXJpYS5zcGVlZDtcbiAgICBjb25zdCBkaXJlY3Rpb24gPSBjcml0ZXJpYS5kaXJlY3Rpb247XG4gICAgY29uc3QgY3VycmVudENhbnZhc0dyb3VwSW5kZXggPSBjcml0ZXJpYS5jdXJyZW50Q2FudmFzR3JvdXBJbmRleDtcbiAgICBjb25zdCBjdXJyZW50Q2FudmFzR3JvdXBDZW50ZXIgPSBjcml0ZXJpYS5jdXJyZW50Q2FudmFzR3JvdXBDZW50ZXI7XG5cbiAgICBsZXQgbmV4dENhbnZhc0dyb3VwOiBudW1iZXI7XG4gICAgbGV0IGNhbnZhc0dyb3VwRGVsdGEgPSB0aGlzLmNhbGN1bGF0ZU51bWJlck9mQ2FudmFzR3JvdXBzVG9HbyhzcGVlZCk7XG4gICAgaWYgKGNhbnZhc0dyb3VwRGVsdGEgPT09IDApIHtcbiAgICAgIG5leHRDYW52YXNHcm91cCA9IGN1cnJlbnRDYW52YXNHcm91cENlbnRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FudmFzR3JvdXBEZWx0YSA9XG4gICAgICAgIGRpcmVjdGlvbiA9PT0gRGlyZWN0aW9uLkxFRlQgPyBjYW52YXNHcm91cERlbHRhIDogY2FudmFzR3JvdXBEZWx0YSAqIC0xO1xuICAgICAgbmV4dENhbnZhc0dyb3VwID1cbiAgICAgICAgY3JpdGVyaWEudmlld2luZ0RpcmVjdGlvbiA9PT0gVmlld2luZ0RpcmVjdGlvbi5MVFJcbiAgICAgICAgICA/IGN1cnJlbnRDYW52YXNHcm91cEluZGV4ICsgY2FudmFzR3JvdXBEZWx0YVxuICAgICAgICAgIDogY3VycmVudENhbnZhc0dyb3VwSW5kZXggLSBjYW52YXNHcm91cERlbHRhO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dENhbnZhc0dyb3VwO1xuICB9XG5cbiAgcHJpdmF0ZSBjYWxjdWxhdGVOdW1iZXJPZkNhbnZhc0dyb3Vwc1RvR28oc3BlZWQ6IG51bWJlciB8IHVuZGVmaW5lZCk6IG51bWJlciB7XG4gICAgbGV0IGNhbnZhc0dyb3Vwc1RvR28gPSAxMDtcbiAgICBpZiAoc3BlZWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKHNwZWVkIDwgNTAwKSB7XG4gICAgICAgIGNhbnZhc0dyb3Vwc1RvR28gPSAwO1xuICAgICAgfSBlbHNlIGlmIChzcGVlZCA+PSA1MDAgJiYgc3BlZWQgPCAxNTAwKSB7XG4gICAgICAgIGNhbnZhc0dyb3Vwc1RvR28gPSAxO1xuICAgICAgfSBlbHNlIGlmIChzcGVlZCA+PSAxNTAwICYmIHNwZWVkIDwgMjUwMCkge1xuICAgICAgICBjYW52YXNHcm91cHNUb0dvID0gMztcbiAgICAgIH0gZWxzZSBpZiAoc3BlZWQgPj0gMjUwMCAmJiBzcGVlZCA8IDM1MDApIHtcbiAgICAgICAgY2FudmFzR3JvdXBzVG9HbyA9IDU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjYW52YXNHcm91cHNUb0dvO1xuICB9XG59XG4iXX0=